{"/home/travis/build/npmtest/node-npmtest-generic-pool/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_generic_pool */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/lib.npmtest_generic_pool.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/lib.npmtest_generic_pool.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":63}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_generic_pool */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_generic_pool = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_generic_pool = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":53},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":56}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":70},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-generic-pool && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_generic_pool */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_generic_pool","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught.stack);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_generic_pool.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_generic_pool.rollup.js'] =","            local.assetsDict['/assets.npmtest_generic_pool.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_generic_pool.__dirname +","                    '/lib.npmtest_generic_pool.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":54}},"5":{"start":{"line":5,"column":0},"end":{"line":13,"column":1}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":74}}},"branchMap":{},"code":["const Pool = require('./lib/Pool')","const Deque = require('./lib/Deque')","const PriorityQueue = require('./lib/PriorityQueue')","const DefaultEvictor = require('./lib/DefaultEvictor')","module.exports = {","  Pool: Pool, ","  Deque: Deque,","  PriorityQueue: PriorityQueue,","  DefaultEvictor: DefaultEvictor,","  createPool: function(factory, config){","    return new Pool(DefaultEvictor, Deque, PriorityQueue, factory, config)","  }","}","",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"11":0}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/Pool.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/Pool.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":36,"loc":{"start":{"line":36,"column":14},"end":{"line":36,"column":64}}},"2":{"name":"(anonymous_2)","line":124,"loc":{"start":{"line":124,"column":11},"end":{"line":124,"column":28}}},"3":{"name":"(anonymous_3)","line":145,"loc":{"start":{"line":145,"column":16},"end":{"line":145,"column":19}}},"4":{"name":"(anonymous_4)","line":177,"loc":{"start":{"line":177,"column":20},"end":{"line":177,"column":23}}},"5":{"name":"(anonymous_5)","line":193,"loc":{"start":{"line":193,"column":12},"end":{"line":193,"column":15}}},"6":{"name":"(anonymous_6)","line":239,"loc":{"start":{"line":239,"column":45},"end":{"line":239,"column":62}}},"7":{"name":"(anonymous_7)","line":262,"loc":{"start":{"line":262,"column":18},"end":{"line":262,"column":35}}},"8":{"name":"(anonymous_8)","line":277,"loc":{"start":{"line":277,"column":18},"end":{"line":277,"column":21}}},"9":{"name":"(anonymous_9)","line":293,"loc":{"start":{"line":293,"column":21},"end":{"line":293,"column":32}}},"10":{"name":"(anonymous_10)","line":303,"loc":{"start":{"line":303,"column":17},"end":{"line":303,"column":20}}},"11":{"name":"(anonymous_11)","line":313,"loc":{"start":{"line":313,"column":9},"end":{"line":313,"column":12}}},"12":{"name":"(anonymous_12)","line":349,"loc":{"start":{"line":349,"column":22},"end":{"line":349,"column":25}}},"13":{"name":"(anonymous_13)","line":359,"loc":{"start":{"line":359,"column":24},"end":{"line":359,"column":27}}},"14":{"name":"(anonymous_14)","line":364,"loc":{"start":{"line":364,"column":8},"end":{"line":364,"column":11}}},"15":{"name":"(anonymous_15)","line":394,"loc":{"start":{"line":394,"column":10},"end":{"line":394,"column":21}}},"16":{"name":"(anonymous_16)","line":417,"loc":{"start":{"line":417,"column":10},"end":{"line":417,"column":21}}},"17":{"name":"(anonymous_17)","line":445,"loc":{"start":{"line":445,"column":10},"end":{"line":445,"column":21}}},"18":{"name":"(anonymous_18)","line":464,"loc":{"start":{"line":464,"column":39},"end":{"line":464,"column":56}}},"19":{"name":"(anonymous_19)","line":481,"loc":{"start":{"line":481,"column":8},"end":{"line":481,"column":11}}},"20":{"name":"(anonymous_20)","line":492,"loc":{"start":{"line":492,"column":31},"end":{"line":492,"column":34}}},"21":{"name":"(anonymous_21)","line":502,"loc":{"start":{"line":502,"column":25},"end":{"line":502,"column":28}}},"22":{"name":"(anonymous_22)","line":520,"loc":{"start":{"line":520,"column":8},"end":{"line":520,"column":11}}},"23":{"name":"(anonymous_23)","line":543,"loc":{"start":{"line":543,"column":41},"end":{"line":543,"column":44}}},"24":{"name":"(anonymous_24)","line":557,"loc":{"start":{"line":557,"column":13},"end":{"line":557,"column":16}}},"25":{"name":"(anonymous_25)","line":565,"loc":{"start":{"line":565,"column":28},"end":{"line":565,"column":31}}},"26":{"name":"(anonymous_26)","line":573,"loc":{"start":{"line":573,"column":11},"end":{"line":573,"column":14}}},"27":{"name":"(anonymous_27)","line":581,"loc":{"start":{"line":581,"column":16},"end":{"line":581,"column":19}}},"28":{"name":"(anonymous_28)","line":589,"loc":{"start":{"line":589,"column":15},"end":{"line":589,"column":18}}},"29":{"name":"(anonymous_29)","line":597,"loc":{"start":{"line":597,"column":14},"end":{"line":597,"column":17}}},"30":{"name":"(anonymous_30)","line":605,"loc":{"start":{"line":605,"column":10},"end":{"line":605,"column":13}}},"31":{"name":"(anonymous_31)","line":613,"loc":{"start":{"line":613,"column":10},"end":{"line":613,"column":13}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":51}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":54}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":46}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":51}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":11}},"11":{"start":{"line":39,"column":4},"end":{"line":39,"column":29}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":43}},"13":{"start":{"line":44,"column":4},"end":{"line":44,"column":40}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":27}},"15":{"start":{"line":47,"column":4},"end":{"line":47,"column":26}},"16":{"start":{"line":48,"column":4},"end":{"line":48,"column":25}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":77}},"18":{"start":{"line":59,"column":4},"end":{"line":59,"column":45}},"19":{"start":{"line":65,"column":4},"end":{"line":65,"column":46}},"20":{"start":{"line":72,"column":4},"end":{"line":72,"column":40}},"21":{"start":{"line":78,"column":4},"end":{"line":78,"column":43}},"22":{"start":{"line":84,"column":4},"end":{"line":84,"column":43}},"23":{"start":{"line":90,"column":4},"end":{"line":90,"column":42}},"24":{"start":{"line":96,"column":4},"end":{"line":96,"column":32}},"25":{"start":{"line":102,"column":4},"end":{"line":102,"column":35}},"26":{"start":{"line":108,"column":4},"end":{"line":108,"column":62}},"27":{"start":{"line":110,"column":4},"end":{"line":110,"column":33}},"28":{"start":{"line":116,"column":4},"end":{"line":116,"column":34}},"29":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"30":{"start":{"line":120,"column":6},"end":{"line":120,"column":18}},"31":{"start":{"line":126,"column":4},"end":{"line":126,"column":31}},"32":{"start":{"line":127,"column":4},"end":{"line":127,"column":43}},"33":{"start":{"line":129,"column":4},"end":{"line":129,"column":68}},"34":{"start":{"line":130,"column":4},"end":{"line":130,"column":71}},"35":{"start":{"line":132,"column":4},"end":{"line":135,"column":6}},"36":{"start":{"line":134,"column":6},"end":{"line":134,"column":46}},"37":{"start":{"line":138,"column":4},"end":{"line":138,"column":25}},"38":{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},"39":{"start":{"line":147,"column":6},"end":{"line":147,"column":18}},"40":{"start":{"line":150,"column":4},"end":{"line":150,"column":57}},"41":{"start":{"line":152,"column":4},"end":{"line":152,"column":25}},"42":{"start":{"line":153,"column":4},"end":{"line":153,"column":51}},"43":{"start":{"line":154,"column":4},"end":{"line":154,"column":72}},"44":{"start":{"line":155,"column":4},"end":{"line":155,"column":77}},"45":{"start":{"line":157,"column":4},"end":{"line":168,"column":6}},"46":{"start":{"line":159,"column":6},"end":{"line":159,"column":56}},"47":{"start":{"line":161,"column":6},"end":{"line":166,"column":7}},"48":{"start":{"line":162,"column":8},"end":{"line":162,"column":35}},"49":{"start":{"line":163,"column":8},"end":{"line":163,"column":37}},"50":{"start":{"line":164,"column":8},"end":{"line":164,"column":24}},"51":{"start":{"line":165,"column":8},"end":{"line":165,"column":14}},"52":{"start":{"line":167,"column":6},"end":{"line":167,"column":69}},"53":{"start":{"line":170,"column":4},"end":{"line":170,"column":15}},"54":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"55":{"start":{"line":179,"column":6},"end":{"line":179,"column":18}},"56":{"start":{"line":182,"column":4},"end":{"line":182,"column":57}},"57":{"start":{"line":183,"column":4},"end":{"line":183,"column":67}},"58":{"start":{"line":184,"column":4},"end":{"line":184,"column":10}},"59":{"start":{"line":198,"column":4},"end":{"line":198,"column":62}},"60":{"start":{"line":202,"column":4},"end":{"line":204,"column":5}},"61":{"start":{"line":203,"column":6},"end":{"line":203,"column":12}},"62":{"start":{"line":206,"column":4},"end":{"line":206,"column":89}},"63":{"start":{"line":208,"column":4},"end":{"line":208,"column":99}},"64":{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},"65":{"start":{"line":210,"column":6},"end":{"line":210,"column":28}},"66":{"start":{"line":215,"column":4},"end":{"line":222,"column":5}},"67":{"start":{"line":217,"column":6},"end":{"line":217,"column":105}},"68":{"start":{"line":218,"column":6},"end":{"line":218,"column":131}},"69":{"start":{"line":219,"column":6},"end":{"line":221,"column":7}},"70":{"start":{"line":220,"column":8},"end":{"line":220,"column":28}},"71":{"start":{"line":225,"column":4},"end":{"line":230,"column":5}},"72":{"start":{"line":226,"column":6},"end":{"line":226,"column":106}},"73":{"start":{"line":227,"column":6},"end":{"line":229,"column":7}},"74":{"start":{"line":228,"column":8},"end":{"line":228,"column":32}},"75":{"start":{"line":240,"column":4},"end":{"line":240,"column":69}},"76":{"start":{"line":241,"column":4},"end":{"line":247,"column":5}},"77":{"start":{"line":244,"column":6},"end":{"line":244,"column":63}},"78":{"start":{"line":246,"column":6},"end":{"line":246,"column":18}},"79":{"start":{"line":248,"column":4},"end":{"line":248,"column":64}},"80":{"start":{"line":249,"column":4},"end":{"line":249,"column":53}},"81":{"start":{"line":250,"column":4},"end":{"line":250,"column":29}},"82":{"start":{"line":251,"column":4},"end":{"line":251,"column":53}},"83":{"start":{"line":252,"column":4},"end":{"line":252,"column":15}},"84":{"start":{"line":263,"column":4},"end":{"line":263,"column":22}},"85":{"start":{"line":265,"column":4},"end":{"line":271,"column":6}},"86":{"start":{"line":266,"column":6},"end":{"line":266,"column":27}},"87":{"start":{"line":267,"column":6},"end":{"line":267,"column":37}},"88":{"start":{"line":269,"column":6},"end":{"line":269,"column":27}},"89":{"start":{"line":270,"column":6},"end":{"line":270,"column":36}},"90":{"start":{"line":279,"column":4},"end":{"line":279,"column":49}},"91":{"start":{"line":280,"column":4},"end":{"line":280,"column":71}},"92":{"start":{"line":282,"column":4},"end":{"line":290,"column":6}},"93":{"start":{"line":284,"column":6},"end":{"line":284,"column":39}},"94":{"start":{"line":285,"column":6},"end":{"line":285,"column":17}},"95":{"start":{"line":288,"column":6},"end":{"line":288,"column":45}},"96":{"start":{"line":289,"column":6},"end":{"line":289,"column":22}},"97":{"start":{"line":294,"column":4},"end":{"line":294,"column":55}},"98":{"start":{"line":295,"column":4},"end":{"line":295,"column":40}},"99":{"start":{"line":297,"column":4},"end":{"line":297,"column":67}},"100":{"start":{"line":304,"column":4},"end":{"line":306,"column":5}},"101":{"start":{"line":305,"column":6},"end":{"line":305,"column":12}},"102":{"start":{"line":307,"column":4},"end":{"line":307,"column":55}},"103":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"104":{"start":{"line":309,"column":6},"end":{"line":309,"column":28}},"105":{"start":{"line":314,"column":4},"end":{"line":314,"column":99}},"106":{"start":{"line":315,"column":4},"end":{"line":319,"column":5}},"107":{"start":{"line":320,"column":4},"end":{"line":346,"column":5}},"108":{"start":{"line":321,"column":6},"end":{"line":321,"column":59}},"109":{"start":{"line":325,"column":6},"end":{"line":328,"column":7}},"110":{"start":{"line":326,"column":8},"end":{"line":326,"column":38}},"111":{"start":{"line":327,"column":8},"end":{"line":327,"column":14}},"112":{"start":{"line":331,"column":6},"end":{"line":334,"column":7}},"113":{"start":{"line":332,"column":8},"end":{"line":332,"column":38}},"114":{"start":{"line":333,"column":8},"end":{"line":333,"column":13}},"115":{"start":{"line":336,"column":6},"end":{"line":336,"column":44}},"116":{"start":{"line":338,"column":6},"end":{"line":338,"column":102}},"117":{"start":{"line":339,"column":6},"end":{"line":339,"column":20}},"118":{"start":{"line":341,"column":6},"end":{"line":345,"column":7}},"119":{"start":{"line":343,"column":8},"end":{"line":343,"column":39}},"120":{"start":{"line":344,"column":8},"end":{"line":344,"column":31}},"121":{"start":{"line":351,"column":4},"end":{"line":356,"column":5}},"122":{"start":{"line":352,"column":6},"end":{"line":355,"column":48}},"123":{"start":{"line":353,"column":8},"end":{"line":353,"column":21}},"124":{"start":{"line":354,"column":8},"end":{"line":354,"column":34}},"125":{"start":{"line":360,"column":4},"end":{"line":360,"column":41}},"126":{"start":{"line":361,"column":4},"end":{"line":361,"column":34}},"127":{"start":{"line":365,"column":4},"end":{"line":367,"column":5}},"128":{"start":{"line":366,"column":6},"end":{"line":366,"column":12}},"129":{"start":{"line":368,"column":4},"end":{"line":370,"column":5}},"130":{"start":{"line":369,"column":6},"end":{"line":369,"column":12}},"131":{"start":{"line":371,"column":4},"end":{"line":371,"column":24}},"132":{"start":{"line":372,"column":4},"end":{"line":372,"column":30}},"133":{"start":{"line":373,"column":4},"end":{"line":373,"column":25}},"134":{"start":{"line":395,"column":4},"end":{"line":397,"column":5}},"135":{"start":{"line":396,"column":6},"end":{"line":396,"column":87}},"136":{"start":{"line":400,"column":4},"end":{"line":402,"column":5}},"137":{"start":{"line":401,"column":6},"end":{"line":401,"column":81}},"138":{"start":{"line":404,"column":4},"end":{"line":404,"column":97}},"139":{"start":{"line":405,"column":4},"end":{"line":405,"column":64}},"140":{"start":{"line":406,"column":4},"end":{"line":406,"column":20}},"141":{"start":{"line":408,"column":4},"end":{"line":408,"column":34}},"142":{"start":{"line":419,"column":4},"end":{"line":419,"column":50}},"143":{"start":{"line":421,"column":4},"end":{"line":423,"column":5}},"144":{"start":{"line":422,"column":6},"end":{"line":422,"column":88}},"145":{"start":{"line":425,"column":4},"end":{"line":425,"column":40}},"146":{"start":{"line":426,"column":4},"end":{"line":426,"column":18}},"147":{"start":{"line":427,"column":4},"end":{"line":427,"column":46}},"148":{"start":{"line":429,"column":4},"end":{"line":429,"column":31}},"149":{"start":{"line":430,"column":4},"end":{"line":430,"column":61}},"150":{"start":{"line":432,"column":4},"end":{"line":432,"column":20}},"151":{"start":{"line":433,"column":4},"end":{"line":433,"column":34}},"152":{"start":{"line":447,"column":4},"end":{"line":447,"column":50}},"153":{"start":{"line":449,"column":4},"end":{"line":451,"column":5}},"154":{"start":{"line":450,"column":6},"end":{"line":450,"column":88}},"155":{"start":{"line":453,"column":4},"end":{"line":453,"column":40}},"156":{"start":{"line":454,"column":4},"end":{"line":454,"column":18}},"157":{"start":{"line":455,"column":4},"end":{"line":455,"column":46}},"158":{"start":{"line":457,"column":4},"end":{"line":457,"column":31}},"159":{"start":{"line":458,"column":4},"end":{"line":458,"column":33}},"160":{"start":{"line":460,"column":4},"end":{"line":460,"column":20}},"161":{"start":{"line":461,"column":4},"end":{"line":461,"column":34}},"162":{"start":{"line":465,"column":4},"end":{"line":465,"column":25}},"163":{"start":{"line":466,"column":4},"end":{"line":470,"column":5}},"164":{"start":{"line":467,"column":6},"end":{"line":467,"column":49}},"165":{"start":{"line":469,"column":6},"end":{"line":469,"column":52}},"166":{"start":{"line":482,"column":4},"end":{"line":482,"column":25}},"167":{"start":{"line":483,"column":4},"end":{"line":489,"column":8}},"168":{"start":{"line":485,"column":8},"end":{"line":485,"column":44}},"169":{"start":{"line":488,"column":8},"end":{"line":488,"column":36}},"170":{"start":{"line":493,"column":4},"end":{"line":497,"column":5}},"171":{"start":{"line":496,"column":6},"end":{"line":496,"column":62}},"172":{"start":{"line":498,"column":4},"end":{"line":498,"column":34}},"173":{"start":{"line":503,"column":4},"end":{"line":505,"column":19}},"174":{"start":{"line":504,"column":19},"end":{"line":504,"column":31}},"175":{"start":{"line":506,"column":4},"end":{"line":506,"column":32}},"176":{"start":{"line":521,"column":4},"end":{"line":522,"column":19}},"177":{"start":{"line":525,"column":4},"end":{"line":534,"column":6}},"178":{"start":{"line":528,"column":6},"end":{"line":530,"column":7}},"179":{"start":{"line":529,"column":8},"end":{"line":529,"column":31}},"180":{"start":{"line":531,"column":6},"end":{"line":532,"column":21}},"181":{"start":{"line":533,"column":6},"end":{"line":533,"column":56}},"182":{"start":{"line":544,"column":4},"end":{"line":547,"column":40}},"183":{"start":{"line":558,"column":4},"end":{"line":558,"column":69}},"184":{"start":{"line":566,"column":4},"end":{"line":566,"column":90}},"185":{"start":{"line":574,"column":4},"end":{"line":574,"column":22}},"186":{"start":{"line":582,"column":4},"end":{"line":582,"column":40}},"187":{"start":{"line":590,"column":4},"end":{"line":590,"column":35}},"188":{"start":{"line":598,"column":4},"end":{"line":598,"column":43}},"189":{"start":{"line":606,"column":4},"end":{"line":606,"column":27}},"190":{"start":{"line":614,"column":4},"end":{"line":614,"column":27}},"191":{"start":{"line":618,"column":0},"end":{"line":618,"column":21}}},"branchMap":{"1":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"2":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"3":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":6}},{"start":{"line":161,"column":6},"end":{"line":161,"column":6}}]},"4":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":178,"column":4}},{"start":{"line":178,"column":4},"end":{"line":178,"column":4}}]},"5":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"6":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"7":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"8":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"9":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":4},"end":{"line":304,"column":4}},{"start":{"line":304,"column":4},"end":{"line":304,"column":4}}]},"10":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":6},"end":{"line":325,"column":6}},{"start":{"line":325,"column":6},"end":{"line":325,"column":6}}]},"11":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":10},"end":{"line":325,"column":39}},{"start":{"line":325,"column":43},"end":{"line":325,"column":76}}]},"12":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":6},"end":{"line":331,"column":6}},{"start":{"line":331,"column":6},"end":{"line":331,"column":6}}]},"13":{"line":331,"type":"binary-expr","locations":[{"start":{"line":331,"column":10},"end":{"line":331,"column":39}},{"start":{"line":331,"column":43},"end":{"line":331,"column":76}}]},"14":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":6},"end":{"line":341,"column":6}},{"start":{"line":341,"column":6},"end":{"line":341,"column":6}}]},"15":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":351,"column":4}},{"start":{"line":351,"column":4},"end":{"line":351,"column":4}}]},"16":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":4},"end":{"line":365,"column":4}},{"start":{"line":365,"column":4},"end":{"line":365,"column":4}}]},"17":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":4},"end":{"line":368,"column":4}},{"start":{"line":368,"column":4},"end":{"line":368,"column":4}}]},"18":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":4},"end":{"line":395,"column":4}},{"start":{"line":395,"column":4},"end":{"line":395,"column":4}}]},"19":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":4},"end":{"line":400,"column":4}},{"start":{"line":400,"column":4},"end":{"line":400,"column":4}}]},"20":{"line":400,"type":"binary-expr","locations":[{"start":{"line":400,"column":8},"end":{"line":400,"column":52}},{"start":{"line":400,"column":56},"end":{"line":400,"column":122}}]},"21":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":4},"end":{"line":421,"column":4}},{"start":{"line":421,"column":4},"end":{"line":421,"column":4}}]},"22":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":4},"end":{"line":449,"column":4}},{"start":{"line":449,"column":4},"end":{"line":449,"column":4}}]},"23":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":4},"end":{"line":466,"column":4}},{"start":{"line":466,"column":4},"end":{"line":466,"column":4}}]},"24":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":493,"column":4}},{"start":{"line":493,"column":4},"end":{"line":493,"column":4}}]}},"code":["'use strict'","","const EventEmitter = require('events').EventEmitter","","const factoryValidator = require('./factoryValidator')","const PoolOptions = require('./PoolOptions')","const ResourceRequest = require('./ResourceRequest')","const ResourceLoan = require('./ResourceLoan')","const PooledResource = require('./PooledResource')","","const reflector = require('./utils').reflector","","/**"," * TODO: move me"," */","const FACTORY_CREATE_ERROR = 'factoryCreateError'","const FACTORY_DESTROY_ERROR = 'factoryDestroyError'","","class Pool extends EventEmitter {","","  /**","   * Generate an Object pool with a specified `factory` and `config`.","   *","   * @param {Object} factory","   *   Factory to be used for generating and destroying the items.","   * @param {Function} factory.create","   *   Should create the item to be acquired,","   *   and call it's first callback argument with the generated item as it's argument.","   * @param {Function} factory.destroy","   *   Should gently close any resources that the item is using.","   *   Called before the items is destroyed.","   * @param {Function} factory.validate","   *   Test if a resource is still valid .Should return a promise that resolves to a boolean, true if resource is still valid and false","   *   If it should be removed from pool.","   */","  constructor (Evictor, Deque, PriorityQueue, factory, options) {","    super()","","    factoryValidator(factory)","","    this._config = new PoolOptions(options)","","    // TODO: fix up this ugly glue-ing","    this._Promise = this._config.Promise","","    this._factory = factory","    this._draining = false","    this._started = false","    /**","     * Holds waiting clients","     * @type {PriorityQueue}","     */","    this._waitingClientsQueue = new PriorityQueue(this._config.priorityRange)","","    /**","     * Collection of promises for resource creation calls made by the pool to factory.create","     * @type {Set}","     */","    this._factoryCreateOperations = new Set()","","    /**","     * Collection of promises for resource destruction calls made by the pool to factory.destroy","     * @type {Set}","     */","    this._factoryDestroyOperations = new Set()","","    /**","     * A queue/stack of pooledResources awaiting acquisition","     * TODO: replace with LinkedList backed array","     * @type {Array}","     */","    this._availableObjects = new Deque()","","    /**","     * Collection of references for any resource that are undergoing validation before being acquired","     * @type {Set}","     */","    this._testOnBorrowResources = new Set()","","    /**","     * Collection of references for any resource that are undergoing validation before being returned","     * @type {Set}","     */","    this._testOnReturnResources = new Set()","","    /**","     * Collection of promises for any validations currently in process","     * @type {Set}","     */","    this._validationOperations = new Set()","","    /**","     * All objects associated with this pool in any state (except destroyed)","     * @type {PooledResourceCollection}","     */","    this._allObjects = new Set()","","    /**","     * Loans keyed by the borrowed resource","     * @type {Map}","     */","    this._resourceLoans = new Map()","","    /**","     * Infinitely looping iterator over available object","     * @type {DLLArrayIterator}","     */","    this._evictionIterator = this._availableObjects.iterator()","","    this._evictor = new Evictor()","","    /**","     * handle for setTimeout for next eviction run","     * @type {[type]}","     */","    this._scheduledEviction = null","","    // create initial resources (if factory.min > 0)","    if (this._config.autostart === true) {","      this.start()","    }","  }","","  _destroy (pooledResource) {","    // FIXME: do we need another state for \"in destruction\"?","    pooledResource.invalidate()","    this._allObjects.delete(pooledResource)","    // NOTE: this maybe very bad promise usage?","    const destroyPromise = this._factory.destroy(pooledResource.obj)","    const wrappedDestroyPromise = this._Promise.resolve(destroyPromise)","","    this._trackOperation(wrappedDestroyPromise, this._factoryDestroyOperations)","    .catch((reason) => {","      this.emit(FACTORY_DESTROY_ERROR, reason)","    })","","    // TODO: maybe ensuring minimum pool size should live outside here","    this._ensureMinimum()","  }","","  /**","   * Attempt to move an available resource into test and then onto a waiting client","   * @return {Boolean} could we move an available resource into test","   */","  _testOnBorrow () {","    if (this._availableObjects.length < 1) {","      return false","    }","","    const pooledResource = this._availableObjects.shift()","    // Mark the resource as in test","    pooledResource.test()","    this._testOnBorrowResources.add(pooledResource)","    const validationPromise = this._factory.validate(pooledResource.obj)","    const wrappedValidationPromise = this._Promise.resolve(validationPromise)","","    this._trackOperation(wrappedValidationPromise, this._validationOperations)","    .then((isValid) => {","      this._testOnBorrowResources.delete(pooledResource)","","      if (isValid === false) {","        pooledResource.invalidate()","        this._destroy(pooledResource)","        this._dispense()","        return","      }","      this._dispatchPooledResourceToNextWaitingClient(pooledResource)","    })","","    return true","  }","","  /**","   * Attempt to move an available resource to a waiting client","   * @return {Boolean} [description]","   */","  _dispatchResource () {","    if (this._availableObjects.length < 1) {","      return false","    }","","    const pooledResource = this._availableObjects.shift()","    this._dispatchPooledResourceToNextWaitingClient(pooledResource)","    return","  }","","  /**","   * Attempt to resolve an outstanding resource request using an available resource from","   * the pool, or creating new ones","   *","   * @private","   */","  _dispense () {","    /**","     * Local variables for ease of reading/writing","     * these don't (shouldn't) change across the execution of this fn","     */","    const numWaitingClients = this._waitingClientsQueue.length","","    // If there aren't any waiting requests then there is nothing to do","    // so lets short-circuit","    if (numWaitingClients < 1) {","      return","    }","","    const resourceShortfall = numWaitingClients - this._potentiallyAllocableResourceCount","","    const actualNumberOfResourcesToCreate = Math.min(this.spareResourceCapacity, resourceShortfall)","    for (let i = 0; actualNumberOfResourcesToCreate > i; i++) {","      this._createResource()","    }","","    // If we are doing test-on-borrow see how many more resources need to be moved into test","    // to help satisfy waitingClients","    if (this._config.testOnBorrow === true) {","      // how many available resources do we need to shift into test","      const desiredNumberOfResourcesToMoveIntoTest = numWaitingClients - this._testOnBorrowResources.size","      const actualNumberOfResourcesToMoveIntoTest = Math.min(this._availableObjects.length, desiredNumberOfResourcesToMoveIntoTest)","      for (let i = 0; actualNumberOfResourcesToMoveIntoTest > i; i++) {","        this._testOnBorrow()","      }","    }","","    // if we aren't testing-on-borrow then lets try to allocate what we can","    if (this._config.testOnBorrow === false) {","      const actualNumberOfResourcesToDispatch = Math.min(this._availableObjects.length, numWaitingClients)","      for (let i = 0; actualNumberOfResourcesToDispatch > i; i++) {","        this._dispatchResource()","      }","    }","  }","","  /**","   * Dispatches a pooledResource to the next waiting client (if any) else","   * puts the PooledResource back on the available list","   * @param  {[type]} pooledResource [description]","   * @return {[type]}                [description]","   */","  _dispatchPooledResourceToNextWaitingClient (pooledResource) {","    const clientResourceRequest = this._waitingClientsQueue.dequeue()","    if (clientResourceRequest === undefined) {","      // While we were away either all the waiting clients timed out","      // or were somehow fulfilled. put our pooledResource back.","      this._addPooledResourceToAvailableObjects(pooledResource)","      // TODO: do need to trigger anything before we leave?","      return false","    }","    const loan = new ResourceLoan(pooledResource, this._Promise)","    this._resourceLoans.set(pooledResource.obj, loan)","    pooledResource.allocate()","    clientResourceRequest.resolve(pooledResource.obj)","    return true","  }","","  /**","   * tracks on operation using given set","   * handles adding/removing from the set and resolve/rejects the value/reason","   * @param  {Promise} operation","   * @param  {Set} set       Set holding operations","   * @return {Promise}       Promise that resolves once operation has been removed from set","   */","  _trackOperation (operation, set) {","    set.add(operation)","","    return operation.then((v) => {","      set.delete(operation)","      return this._Promise.resolve(v)","    }, (e) => {","      set.delete(operation)","      return this._Promise.reject(e)","    })","  }","","  /**","   * @private","   */","  _createResource () {","    // An attempt to create a resource","    const factoryPromise = this._factory.create()","    const wrappedFactoryPromise = this._Promise.resolve(factoryPromise)","","    this._trackOperation(wrappedFactoryPromise, this._factoryCreateOperations)","    .then((resource) => {","      this._handleNewResource(resource)","      return null","    })","    .catch((reason) => {","      this.emit(FACTORY_CREATE_ERROR, reason)","      this._dispense()","    })","  }","","  _handleNewResource (resource) {","    const pooledResource = new PooledResource(resource)","    this._allObjects.add(pooledResource)","    // TODO: check we aren't exceding our maxPoolSize before doing","    this._dispatchPooledResourceToNextWaitingClient(pooledResource)","  }","","  /**","   * @private","   */","  _ensureMinimum () {","    if (this._draining === true) {","      return","    }","    const minShortfall = this._config.min - this._count","    for (let i = 0; i < minShortfall; i++) {","      this._createResource()","    }","  }","","  _evict () {","    const testsToRun = Math.min(this._config.numTestsPerEvictionRun, this._availableObjects.length)","    const evictionConfig = {","      softIdleTimeoutMillis: this._config.softIdleTimeoutMillis,","      idleTimeoutMillis: this._config.idleTimeoutMillis,","      min: this._config.min","    }","    for (let testsHaveRun = 0; testsHaveRun < testsToRun;) {","      const iterationResult = this._evictionIterator.next()","","      // Safety check incase we could get stuck in infinite loop because we","      // somehow emptied the array after chekcing it's length","      if (iterationResult.done === true && this._availableObjects.length < 1) {","        this._evictionIterator.reset()","        return","      }","      // if this happens it should just mean we reached the end of the","      // list and can reset the cursor.","      if (iterationResult.done === true && this._availableObjects.length > 0) {","        this._evictionIterator.reset()","        break","      }","","      const resource = iterationResult.value","","      const shouldEvict = this._evictor.evict(evictionConfig, resource, this._availableObjects.length)","      testsHaveRun++","","      if (shouldEvict === true) {","        // take it out of the _availableObjects list","        this._evictionIterator.remove()","        this._destroy(resource)","      }","    }","  }","","  _scheduleEvictorRun () {","    // Start eviction if set","    if (this._config.evictionRunIntervalMillis > 0) {","      this._scheduledEviction = setTimeout(() => {","        this._evict()","        this._scheduleEvictorRun()","      }, this._config.evictionRunIntervalMillis)","    }","  }","","  _descheduleEvictorRun () {","    clearTimeout(this._scheduledEviction)","    this._scheduledEviction = null","  }","","  start () {","    if (this._draining === true) {","      return","    }","    if (this._started === true) {","      return","    }","    this._started = true","    this._scheduleEvictorRun()","    this._ensureMinimum()","  }","","  /**","   * Request a new resource. The callback will be called,","   * when a new resource is available, passing the resource to the callback.","   * TODO: should we add a seperate \"acquireWithPriority\" function","   *","   * @param {Function} callback","   *   Callback function to be called after the acquire is successful.","   *   If there is an error preventing the acquisition of resource, an error will","   *   be the first parameter, else it will be null.","   *   The acquired resource will be the second parameter.","   *","   * @param {Number} priority","   *   Optional.  Integer between 0 and (priorityRange - 1).  Specifies the priority","   *   of the caller if there are no available resources.  Lower numbers mean higher","   *   priority.","   *","   * @returns {Promise}","   */","  acquire (priority) {","    if (this._draining) {","      return this._Promise.reject(new Error('pool is draining and cannot accept work'))","    }","","    // TODO: should we defer this check till after this event loop incase \"the situation\" changes in the meantime","    if (this._config.maxWaitingClients !== undefined && this._waitingClientsQueue.length >= this._config.maxWaitingClients) {","      return this._Promise.reject(new Error('max waitingClients count exceeded'))","    }","","    const resourceRequest = new ResourceRequest(this._config.acquireTimeoutMillis, this._Promise)","    this._waitingClientsQueue.enqueue(resourceRequest, priority)","    this._dispense()","","    return resourceRequest.promise","  }","","  /**","   * Return the resource to the pool when it is no longer required.","   *","   * @param {Object} obj","   *   The acquired object to be put back to the pool.","   */","  release (resource) {","    // check for an outstanding loan","    const loan = this._resourceLoans.get(resource)","","    if (loan === undefined) {","      return this._Promise.reject(new Error('Resource not currently part of this pool'))","    }","","    this._resourceLoans.delete(resource)","    loan.resolve()","    const pooledResource = loan.pooledResource","","    pooledResource.deallocate()","    this._addPooledResourceToAvailableObjects(pooledResource)","","    this._dispense()","    return this._Promise.resolve()","  }","","  /**","   * Request the resource to be destroyed. The factory's destroy handler","   * will also be called.","   *","   * This should be called within an acquire() block as an alternative to release().","   *","   * @param {Object} resource","   *   The acquired resource to be destoyed.","   */","  destroy (resource) {","    // check for an outstanding loan","    const loan = this._resourceLoans.get(resource)","","    if (loan === undefined) {","      return this._Promise.reject(new Error('Resource not currently part of this pool'))","    }","","    this._resourceLoans.delete(resource)","    loan.resolve()","    const pooledResource = loan.pooledResource","","    pooledResource.deallocate()","    this._destroy(pooledResource)","","    this._dispense()","    return this._Promise.resolve()","  }","","  _addPooledResourceToAvailableObjects (pooledResource) {","    pooledResource.idle()","    if (this._config.fifo === true) {","      this._availableObjects.push(pooledResource)","    } else {","      this._availableObjects.unshift(pooledResource)","    }","  }","","  /**","   * Disallow any new acquire calls and let the request backlog dissapate.","   * The Pool will no longer attempt to maintain a \"min\" number of resources","   * and will only make new resources on demand.","   * Resolves once all resource requests are fulfilled and all resources are returned to pool and available...","   * Should probably be called \"drain work\"","   * @returns {Promise}","   */","  drain () {","    this._draining = true","    return this.__allResourceRequestsSettled()","      .then(() => {","        return this.__allResourcesReturned()","      })","      .then(() => {","        this._descheduleEvictorRun()","      })","  }","","  __allResourceRequestsSettled () {","    if (this._waitingClientsQueue.length > 0) {","      // wait for last waiting client to be settled","      // FIXME: what if they can \"resolve\" out of order....?","      return reflector(this._waitingClientsQueue.tail.promise)","    }","    return this._Promise.resolve()","  }","","  // FIXME: this is a horrific mess","  __allResourcesReturned () {","    const ps = Array.from(this._resourceLoans.values())","    .map((loan) => loan.promise)","    .map(reflector)","    return this._Promise.all(ps)","  }","","  /**","   * Forcibly destroys all available resources regardless of timeout.  Intended to be","   * invoked as part of a drain.  Does not prevent the creation of new","   * resources as a result of subsequent calls to acquire.","   *","   * Note that if factory.min > 0 and the pool isn't \"draining\", the pool will destroy all idle resources","   * in the pool, but replace them with newly created resources up to the","   * specified factory.min value.  If this is not desired, set factory.min","   * to zero before calling clear()","   *","   */","  clear () {","    const reflectedCreatePromises = Array.from(this._factoryCreateOperations)","    .map(reflector)","","    // wait for outstanding factory.create to complete","    return this._Promise.all(reflectedCreatePromises)","    .then(() => {","      // Destroy existing resources","      for (const resource of this._availableObjects) {","        this._destroy(resource)","      }","      const reflectedDestroyPromises = Array.from(this._factoryDestroyOperations)","      .map(reflector)","      return this._Promise.all(reflectedDestroyPromises)","    })","  }","","  /**","   * How many resources are available to allocated","   * (includes resources that have not been tested and may faul validation)","   * NOTE: internal for now as the name is awful and might not be useful to anyone","   * @return {Number} number of resources the pool has to allocate","   */","  get _potentiallyAllocableResourceCount () {","    return this._availableObjects.length +","      this._testOnBorrowResources.size +","      this._testOnReturnResources.size +","      this._factoryCreateOperations.size","  }","","  /**","   * The combined count of the currently created objects and those in the","   * process of being created","   * Does NOT include resources in the process of being destroyed","   * sort of legacy...","   * @return {Number}","   */","  get _count () {","    return this._allObjects.size + this._factoryCreateOperations.size","  }","","  /**","   * How many more resources does the pool have room for","   * @return {Number} number of resources the pool could create before hitting any limits","   */","  get spareResourceCapacity () {","    return this._config.max - (this._allObjects.size + this._factoryCreateOperations.size)","  }","","  /**","   * see _count above","   * @return {Number} [description]","   */","  get size () {","    return this._count","  }","","  /**","   * number of available resources","   * @return {Number} [description]","   */","  get available () {","    return this._availableObjects.length","  }","","  /**","   * number of resources that are currently acquired","   * @return {[type]} [description]","   */","  get borrowed () {","    return this._resourceLoans.size","  }","","  /**","   * number of waiting acquire calls","   * @return {[type]} [description]","   */","  get pending () {","    return this._waitingClientsQueue.length","  }","","  /**","   * maximum size of the pool","   * @return {[type]} [description]","   */","  get max () {","    return this._config.max","  }","","  /**","   * minimum size of the pool","   * @return {[type]} [description]","   */","  get min () {","    return this._config.min","  }","}","","module.exports = Pool",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"16":1,"17":1,"37":0,"39":0,"41":0,"44":0,"46":0,"47":0,"48":0,"53":0,"59":0,"65":0,"72":0,"78":0,"84":0,"90":0,"96":0,"102":0,"108":0,"110":0,"116":0,"119":0,"120":0,"126":0,"127":0,"129":0,"130":0,"132":0,"134":0,"138":0,"146":0,"147":0,"150":0,"152":0,"153":0,"154":0,"155":0,"157":0,"159":0,"161":0,"162":0,"163":0,"164":0,"165":0,"167":0,"170":0,"178":0,"179":0,"182":0,"183":0,"184":0,"198":0,"202":0,"203":0,"206":0,"208":0,"209":0,"210":0,"215":0,"217":0,"218":0,"219":0,"220":0,"225":0,"226":0,"227":0,"228":0,"240":0,"241":0,"244":0,"246":0,"248":0,"249":0,"250":0,"251":0,"252":0,"263":0,"265":0,"266":0,"267":0,"269":0,"270":0,"279":0,"280":0,"282":0,"284":0,"285":0,"288":0,"289":0,"294":0,"295":0,"297":0,"304":0,"305":0,"307":0,"308":0,"309":0,"314":0,"315":0,"320":0,"321":0,"325":0,"326":0,"327":0,"331":0,"332":0,"333":0,"336":0,"338":0,"339":0,"341":0,"343":0,"344":0,"351":0,"352":0,"353":0,"354":0,"360":0,"361":0,"365":0,"366":0,"368":0,"369":0,"371":0,"372":0,"373":0,"395":0,"396":0,"400":0,"401":0,"404":0,"405":0,"406":0,"408":0,"419":0,"421":0,"422":0,"425":0,"426":0,"427":0,"429":0,"430":0,"432":0,"433":0,"447":0,"449":0,"450":0,"453":0,"454":0,"455":0,"457":0,"458":0,"460":0,"461":0,"465":0,"466":0,"467":0,"469":0,"482":0,"483":0,"485":0,"488":0,"493":0,"496":0,"498":0,"503":0,"504":0,"506":0,"521":0,"525":0,"528":0,"529":0,"531":0,"533":0,"544":0,"558":0,"566":0,"574":0,"582":0,"590":0,"598":0,"606":0,"614":0,"618":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/factoryValidator.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/factoryValidator.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":36}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":60}},"4":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":61}},"6":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":2},"end":{"line":3,"column":2}},{"start":{"line":3,"column":2},"end":{"line":3,"column":2}}]},"2":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"4":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":45}},{"start":{"line":11,"column":49},"end":{"line":11,"column":87}}]}},"code":["","module.exports = function (factory) {","  if (typeof factory.create !== 'function') {","    throw new TypeError('factory.create must be a function')","  }","","  if (typeof factory.destroy !== 'function') {","    throw new TypeError('factory.destroy must be a function')","  }","","  if (typeof factory.validate !== 'undefined' && typeof factory.validate !== 'function') {","    throw new TypeError('factory.validate must be a function')","  }","}",""],"l":{"2":1,"3":0,"4":0,"7":0,"8":0,"11":0,"12":0}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/PoolOptions.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/PoolOptions.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":43,"loc":{"start":{"line":43,"column":14},"end":{"line":43,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":44,"column":4},"end":{"line":44,"column":43}},"3":{"start":{"line":46,"column":4},"end":{"line":46,"column":21}},"4":{"start":{"line":48,"column":4},"end":{"line":48,"column":80}},"5":{"start":{"line":49,"column":4},"end":{"line":49,"column":73}},"6":{"start":{"line":51,"column":4},"end":{"line":51,"column":112}},"7":{"start":{"line":52,"column":4},"end":{"line":52,"column":112}},"8":{"start":{"line":54,"column":4},"end":{"line":54,"column":100}},"9":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"10":{"start":{"line":57,"column":6},"end":{"line":57,"column":73}},"11":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"12":{"start":{"line":61,"column":6},"end":{"line":61,"column":67}},"13":{"start":{"line":64,"column":4},"end":{"line":64,"column":37}},"14":{"start":{"line":65,"column":4},"end":{"line":65,"column":37}},"15":{"start":{"line":67,"column":4},"end":{"line":67,"column":58}},"16":{"start":{"line":68,"column":4},"end":{"line":68,"column":65}},"17":{"start":{"line":70,"column":4},"end":{"line":70,"column":109}},"18":{"start":{"line":71,"column":4},"end":{"line":71,"column":100}},"19":{"start":{"line":72,"column":4},"end":{"line":72,"column":97}},"20":{"start":{"line":73,"column":4},"end":{"line":73,"column":85}},"21":{"start":{"line":75,"column":4},"end":{"line":75,"column":79}},"22":{"start":{"line":79,"column":0},"end":{"line":79,"column":28}}},"branchMap":{"1":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":11},"end":{"line":46,"column":15}},{"start":{"line":46,"column":19},"end":{"line":46,"column":21}}]},"2":{"line":48,"type":"cond-expr","locations":[{"start":{"line":48,"column":51},"end":{"line":48,"column":60}},{"start":{"line":48,"column":63},"end":{"line":48,"column":80}}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":25},"end":{"line":49,"column":43}},{"start":{"line":49,"column":47},"end":{"line":49,"column":73}}]},"4":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":67},"end":{"line":51,"column":84}},{"start":{"line":51,"column":87},"end":{"line":51,"column":112}}]},"5":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":67},"end":{"line":52,"column":84}},{"start":{"line":52,"column":87},"end":{"line":52,"column":112}}]},"6":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":61},"end":{"line":54,"column":75}},{"start":{"line":54,"column":78},"end":{"line":54,"column":100}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"8":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"9":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":42},"end":{"line":67,"column":43}},{"start":{"line":67,"column":46},"end":{"line":67,"column":54}}]},"10":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":42},"end":{"line":68,"column":43}},{"start":{"line":68,"column":46},"end":{"line":68,"column":54}}]},"11":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":37},"end":{"line":70,"column":67}},{"start":{"line":70,"column":71},"end":{"line":70,"column":109}}]},"12":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":34},"end":{"line":71,"column":61}},{"start":{"line":71,"column":65},"end":{"line":71,"column":100}}]},"13":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":33},"end":{"line":72,"column":59}},{"start":{"line":72,"column":63},"end":{"line":72,"column":97}}]},"14":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":29},"end":{"line":73,"column":51}},{"start":{"line":73,"column":55},"end":{"line":73,"column":85}}]},"15":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":44},"end":{"line":75,"column":56}},{"start":{"line":75,"column":59},"end":{"line":75,"column":79}}]}},"code":["'use strict'","","const PoolDefaults = require('./PoolDefaults')","","class PoolOptions {","  /**","   * @param {Object} config","   *   configuration for the pool","   * @param {Number} config.max","   *   Maximum number of items that can exist at the same time.  Default: 1.","   *   Any further acquire requests will be pushed to the waiting list.","   * @param {Number} config.min","   *   Minimum number of items in pool (including in-use). Default: 0.","   *   When the pool is created, or a resource destroyed, this minimum will","   *   be checked. If the pool resource count is below the minimum, a new","   *   resource will be created and added to the pool.","   * @param {Number} config.maxWaitingClients","   *   maximum number of queued requests allowed after which acquire calls will be rejected","   * @param {Number} config.acquireTimeoutMillis","   *   Delay in milliseconds after which the an `acquire` call will fail. optional.","   *   Default: undefined. Should be positive and non-zero","   * @param {Number} config.priorityRange","   *   The range from 1 to be treated as a valid priority","   * @param {Bool} [config.fifo=true]","   *   Sets whether the pool has LIFO (last in, first out) behaviour with respect to idle objects.","   *   if false then pool has FIFO behaviour","   * @param {Bool} [config.autostart=true]","   *   Should the pool start creating resources etc once the constructor is called","   * @param {Number} opts.evictionRunIntervalMillis","   *   How often to run eviction checks.  Default: 0 (does not run).","   * @param {Number} opts.numTestsPerEvictionRun","   *   Number of resources to check each eviction run.  Default: 3.","   * @param {Number} opts.softIdleTimeoutMillis","   *   amount of time an object may sit idle in the pool before it is eligible","   *   for eviction by the idle object evictor (if any), with the extra condition","   *   that at least \"min idle\" object instances remain in the pool. Default -1 (nothing can get evicted)","   * @param {Number} opts.idleTimeoutMillis","   *   the minimum amount of time that an object may sit idle in the pool before it is eligible for eviction","   *   due to idle time. Supercedes \"softIdleTimeoutMillis\" Default: 30000","   * @param {Promise} [config.Promise=Promise]","   *   What promise implementation should the pool use, defaults to native promises.","   */","  constructor (opts) {","    const poolDefaults = new PoolDefaults()","","    opts = opts || {}","","    this.fifo = (typeof opts.fifo === 'boolean') ? opts.fifo : poolDefaults.fifo","    this.priorityRange = opts.priorityRange || poolDefaults.priorityRange","","    this.testOnBorrow = (typeof opts.testOnBorrow === 'boolean') ? opts.testOnBorrow : poolDefaults.testOnBorrow","    this.testOnReturn = (typeof opts.testOnReturn === 'boolean') ? opts.testOnReturn : poolDefaults.testOnReturn","","    this.autostart = (typeof opts.autostart === 'boolean') ? opts.autostart : poolDefaults.autostart","","    if (opts.acquireTimeoutMillis) {","      this.acquireTimeoutMillis = parseInt(opts.acquireTimeoutMillis, 10)","    }","","    if (opts.maxWaitingClients) {","      this.maxWaitingClients = parseInt(opts.maxWaitingClients, 10)","    }","","    this.max = parseInt(opts.max, 10)","    this.min = parseInt(opts.min, 10)","","    this.max = Math.max(isNaN(this.max) ? 1 : this.max, 1)","    this.min = Math.min(isNaN(this.min) ? 0 : this.min, this.max)","","    this.evictionRunIntervalMillis = opts.evictionRunIntervalMillis || poolDefaults.evictionRunIntervalMillis","    this.numTestsPerEvictionRun = opts.numTestsPerEvictionRun || poolDefaults.numTestsPerEvictionRun","    this.softIdleTimeoutMillis = opts.softIdleTimeoutMillis || poolDefaults.softIdleTimeoutMillis","    this.idleTimeoutMillis = opts.idleTimeoutMillis || poolDefaults.idleTimeoutMillis","","    this.Promise = (opts.Promise != null) ? opts.Promise : poolDefaults.Promise","  }","}","","module.exports = PoolOptions",""],"l":{"3":1,"44":0,"46":0,"48":0,"49":0,"51":0,"52":0,"54":0,"56":0,"57":0,"60":0,"61":0,"64":0,"65":0,"67":0,"68":0,"70":0,"71":0,"72":0,"73":0,"75":0,"79":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/PoolDefaults.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/PoolDefaults.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":14},"end":{"line":8,"column":17}}}},"statementMap":{"1":{"start":{"line":9,"column":4},"end":{"line":9,"column":20}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":26}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":29}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":29}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":25}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":38}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":35}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":35}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":34}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":36}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":33}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":19}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":19}},"14":{"start":{"line":29,"column":4},"end":{"line":29,"column":26}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":29}}},"branchMap":{},"code":["'use strict'","/**"," * Create the default settings used by the pool"," *"," * @class"," */","class PoolDefaults {","  constructor () {","    this.fifo = true","    this.priorityRange = 1","","    this.testOnBorrow = false","    this.testOnReturn = false","","    this.autostart = true","","    this.evictionRunIntervalMillis = 0","    this.numTestsPerEvictionRun = 3","    this.softIdleTimeoutMillis = -1","    this.idleTimeoutMillis = 30000","","    // FIXME: no defaults!","    this.acquireTimeoutMillis = null","    this.maxWaitingClients = null","","    this.min = null","    this.max = null","    // FIXME: this seems odd?","    this.Promise = Promise","  }","}","","module.exports = PoolDefaults",""],"l":{"9":0,"10":0,"12":0,"13":0,"15":0,"17":0,"18":0,"19":0,"20":0,"23":0,"24":0,"26":0,"27":0,"29":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/ResourceRequest.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/ResourceRequest.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"fbind","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}}},"2":{"name":"bound","line":7,"loc":{"start":{"line":7,"column":9},"end":{"line":7,"column":27}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":14},"end":{"line":23,"column":29}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":13},"end":{"line":33,"column":21}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":16},"end":{"line":52,"column":19}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":15},"end":{"line":57,"column":18}}},"7":{"name":"(anonymous_7)","line":61,"loc":{"start":{"line":61,"column":9},"end":{"line":61,"column":18}}},"8":{"name":"(anonymous_8)","line":66,"loc":{"start":{"line":66,"column":10},"end":{"line":66,"column":18}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":6,"column":0},"end":{"line":10,"column":1}},"4":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":35}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":40}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":24}},"9":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"10":{"start":{"line":29,"column":6},"end":{"line":29,"column":26}},"11":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"12":{"start":{"line":35,"column":6},"end":{"line":35,"column":12}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":35}},"14":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"15":{"start":{"line":40,"column":6},"end":{"line":40,"column":53}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":52}},"17":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"18":{"start":{"line":46,"column":6},"end":{"line":46,"column":26}},"19":{"start":{"line":49,"column":4},"end":{"line":49,"column":86}},"20":{"start":{"line":53,"column":4},"end":{"line":53,"column":31}},"21":{"start":{"line":54,"column":4},"end":{"line":54,"column":24}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":69}},"23":{"start":{"line":62,"column":4},"end":{"line":62,"column":24}},"24":{"start":{"line":63,"column":4},"end":{"line":63,"column":24}},"25":{"start":{"line":67,"column":4},"end":{"line":67,"column":24}},"26":{"start":{"line":68,"column":4},"end":{"line":68,"column":24}},"27":{"start":{"line":72,"column":0},"end":{"line":72,"column":32}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"4":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":18}},{"start":{"line":39,"column":22},"end":{"line":39,"column":30}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]}},"code":["'use strict'","","const Deferred = require('./Deferred')","const errors = require('./errors')","","function fbind (fn, ctx) {","  return function bound () {","    return fn.apply(ctx, arguments)","  }","}","","/**"," * Wraps a users request for a resource"," * Basically a promise mashed in with a timeout"," * @private"," */","class ResourceRequest extends Deferred {","","  /**","   * [constructor description]","   * @param  {Number} ttl     timeout","   */","  constructor (ttl, Promise) {","    super(Promise)","    this._creationTimestamp = Date.now()","    this._timeout = null","","    if (ttl !== undefined) {","      this.setTimeout(ttl)","    }","  }","","  setTimeout (delay) {","    if (this._state !== ResourceRequest.PENDING) {","      return","    }","    const ttl = parseInt(delay, 10)","","    if (isNaN(ttl) || ttl <= 0) {","      throw new Error('delay must be a positive int')","    }","","    const age = Date.now() - this._creationTimestamp","","    if (this._timeout) {","      this.removeTimeout()","    }","","    this._timeout = setTimeout(fbind(this._fireTimeout, this), Math.max(ttl - age, 0))","  }","","  removeTimeout () {","    clearTimeout(this._timeout)","    this._timeout = null","  }","","  _fireTimeout () {","    this.reject(new errors.TimeoutError('ResourceRequest timed out'))","  }","","  reject (reason) {","    this.removeTimeout()","    super.reject(reason)","  }","","  resolve (value) {","    this.removeTimeout()","    super.resolve(value)","  }","}","","module.exports = ResourceRequest",""],"l":{"3":1,"4":1,"6":1,"7":0,"8":0,"24":0,"25":0,"26":0,"28":0,"29":0,"34":0,"35":0,"37":0,"39":0,"40":0,"43":0,"45":0,"46":0,"49":0,"53":0,"54":0,"58":0,"62":0,"63":0,"67":0,"68":0,"72":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/Deferred.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/Deferred.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":1,"20":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":14},"end":{"line":9,"column":24}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":15}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":24,"column":17}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":9},"end":{"line":28,"column":18}}},"5":{"name":"(anonymous_5)","line":36,"loc":{"start":{"line":36,"column":10},"end":{"line":36,"column":18}}}},"statementMap":{"1":{"start":{"line":10,"column":4},"end":{"line":10,"column":34}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":29}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":28}},"4":{"start":{"line":14,"column":4},"end":{"line":17,"column":6}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":29}},"6":{"start":{"line":16,"column":6},"end":{"line":16,"column":27}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":22}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":24}},"9":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"10":{"start":{"line":30,"column":6},"end":{"line":30,"column":12}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":35}},"12":{"start":{"line":33,"column":4},"end":{"line":33,"column":24}},"13":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"14":{"start":{"line":38,"column":6},"end":{"line":38,"column":12}},"15":{"start":{"line":40,"column":4},"end":{"line":40,"column":36}},"16":{"start":{"line":41,"column":4},"end":{"line":41,"column":24}},"17":{"start":{"line":46,"column":0},"end":{"line":46,"column":28}},"18":{"start":{"line":47,"column":0},"end":{"line":47,"column":32}},"19":{"start":{"line":48,"column":0},"end":{"line":48,"column":30}},"20":{"start":{"line":50,"column":0},"end":{"line":50,"column":25}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]}},"code":["'use strict'","","/**"," * This is apparently a bit like a Jquery deferred, hence the name"," */","","class Deferred {","","  constructor (Promise) {","    this._state = Deferred.PENDING","    this._resolve = undefined","    this._reject = undefined","","    this._promise = new Promise((resolve, reject) => {","      this._resolve = resolve","      this._reject = reject","    })","  }","","  get state () {","    return this._state","  }","","  get promise () {","    return this._promise","  }","","  reject (reason) {","    if (this._state !== Deferred.PENDING) {","      return","    }","    this._state = Deferred.REJECTED","    this._reject(reason)","  }","","  resolve (value) {","    if (this._state !== Deferred.PENDING) {","      return","    }","    this._state = Deferred.FULFILLED","    this._resolve(value)","  }","}","","// TODO: should these really live here? or be a seperate 'state' enum","Deferred.PENDING = 'PENDING'","Deferred.FULFILLED = 'FULFILLED'","Deferred.REJECTED = 'REJECTED'","","module.exports = Deferred",""],"l":{"10":0,"11":0,"12":0,"14":0,"15":0,"16":0,"21":0,"25":0,"29":0,"30":0,"32":0,"33":0,"37":0,"38":0,"40":0,"41":0,"46":1,"47":1,"48":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/errors.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/errors.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":14},"end":{"line":4,"column":24}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":18}}}},"statementMap":{"1":{"start":{"line":5,"column":4},"end":{"line":5,"column":18}},"2":{"start":{"line":6,"column":4},"end":{"line":6,"column":37}},"3":{"start":{"line":7,"column":4},"end":{"line":7,"column":26}},"4":{"start":{"line":8,"column":4},"end":{"line":12,"column":5}},"5":{"start":{"line":9,"column":6},"end":{"line":9,"column":53}},"6":{"start":{"line":11,"column":6},"end":{"line":11,"column":45}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":12}},"8":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]}},"code":["'use strict'","","class ExtendableError extends Error {","  constructor (message) {","    super(message)","    this.name = this.constructor.name","    this.message = message","    if (typeof Error.captureStackTrace === 'function') {","      Error.captureStackTrace(this, this.constructor)","    } else {","      this.stack = (new Error(message)).stack","    }","  }","}","","/* eslint-disable no-useless-constructor */","class TimeoutError extends ExtendableError {","  constructor (m) {","    super(m)","  }","}","/* eslint-enable no-useless-constructor */","","module.exports = {","  TimeoutError: TimeoutError","}",""],"l":{"5":0,"6":0,"7":0,"8":0,"9":0,"11":0,"19":0,"24":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/ResourceLoan.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/ResourceLoan.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":14},"end":{"line":16,"column":40}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":9},"end":{"line":22,"column":12}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":17,"column":4},"end":{"line":17,"column":18}},"3":{"start":{"line":18,"column":4},"end":{"line":18,"column":40}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":40}},"5":{"start":{"line":29,"column":0},"end":{"line":29,"column":29}}},"branchMap":{},"code":["'use strict'","","const Deferred = require('./Deferred')","","/**"," * Plan is to maybe add tracking via Error objects"," * and other fun stuff!"," */","","class ResourceLoan extends Deferred {","  /**","   *","   * @param  {PooledResource} pooledResource the PooledResource this loan belongs to","   * @return {[type]}                [description]","   */","  constructor (pooledResource, Promise) {","    super(Promise)","    this._creationTimestamp = Date.now()","    this.pooledResource = pooledResource","  }","","  reject () {","    /**","     * Loans can only be resolved at the moment","     */","  }","}","","module.exports = ResourceLoan",""],"l":{"3":1,"17":0,"18":0,"19":0,"29":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/PooledResource.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/PooledResource.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":25}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":11},"end":{"line":20,"column":14}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":13},"end":{"line":26,"column":16}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":13},"end":{"line":31,"column":16}}},"5":{"name":"(anonymous_5)","line":35,"loc":{"start":{"line":35,"column":7},"end":{"line":35,"column":10}}},"6":{"name":"(anonymous_6)","line":39,"loc":{"start":{"line":39,"column":7},"end":{"line":39,"column":10}}},"7":{"name":"(anonymous_7)","line":44,"loc":{"start":{"line":44,"column":12},"end":{"line":44,"column":15}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":68}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":34}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":30}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":30}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":28}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":23}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":45}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":36}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":36}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":45}},"12":{"start":{"line":32,"column":4},"end":{"line":32,"column":48}},"13":{"start":{"line":36,"column":4},"end":{"line":36,"column":51}},"14":{"start":{"line":40,"column":4},"end":{"line":40,"column":34}},"15":{"start":{"line":41,"column":4},"end":{"line":41,"column":45}},"16":{"start":{"line":45,"column":4},"end":{"line":45,"column":50}},"17":{"start":{"line":49,"column":0},"end":{"line":49,"column":31}}},"branchMap":{},"code":["'use strict'","","const PooledResourceStateEnum = require('./PooledResourceStateEnum')","","/**"," * @class"," * @private"," */","class PooledResource {","  constructor (resource) {","    this.creationTime = Date.now()","    this.lastReturnTime = null","    this.lastBorrowTime = null","    this.lastIdleTime = null","    this.obj = resource","    this.state = PooledResourceStateEnum.IDLE","  }","","  // mark the resource as \"allocated\"","  allocate () {","    this.lastBorrowTime = Date.now()","    this.state = PooledResourceStateEnum.ALLOCATED","  }","","  // mark the resource as \"deallocated\"","  deallocate () {","    this.lastReturnTime = Date.now()","    this.state = PooledResourceStateEnum.IDLE","  }","","  invalidate () {","    this.state = PooledResourceStateEnum.INVALID","  }","","  test () {","    this.state = PooledResourceStateEnum.VALIDATION","  }","","  idle () {","    this.lastIdleTime = Date.now()","    this.state = PooledResourceStateEnum.IDLE","  }","","  returning () {","    this.state = PooledResourceStateEnum.RETURNING","  }","}","","module.exports = PooledResource",""],"l":{"3":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"21":0,"22":0,"27":0,"28":0,"32":0,"36":0,"40":0,"41":0,"45":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/PooledResourceStateEnum.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/PooledResourceStateEnum.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":9,"column":1}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}}},"branchMap":{},"code":["'use strict'","","const PooledResourceStateEnum = {","  ALLOCATED: 'ALLOCATED', // In use","  IDLE: 'IDLE', // In the queue, not in use.","  INVALID: 'INVALID', // Failed validation","  RETURNING: 'RETURNING', // Resource is in process of returning","  VALIDATION: 'VALIDATION' // Currently being tested","}","","module.exports = PooledResourceStateEnum",""],"l":{"3":1,"11":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/utils.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"noop","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":17}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":20},"end":{"line":11,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":19}},"2":{"start":{"line":11,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":33}}},"branchMap":{},"code":["'use strict'","","function noop () {}","","/**"," * Reflects a promise but does not expose any"," * underlying value or rejection from that promise."," * @param  {Promise} promise [description]"," * @return {Promise}         [description]"," */","exports.reflector = function (promise) {","  return promise.then(noop, noop)","}",""],"l":{"3":1,"11":1,"12":0}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/Deque.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/Deque.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":17}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":8},"end":{"line":18,"column":11}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":10},"end":{"line":34,"column":20}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":7},"end":{"line":45,"column":17}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":6},"end":{"line":54,"column":9}}},"6":{"name":"(anonymous_6)","line":65,"loc":{"start":{"line":65,"column":20},"end":{"line":65,"column":23}}},"7":{"name":"(anonymous_7)","line":69,"loc":{"start":{"line":69,"column":11},"end":{"line":69,"column":14}}},"8":{"name":"(anonymous_8)","line":73,"loc":{"start":{"line":73,"column":18},"end":{"line":73,"column":21}}},"9":{"name":"(anonymous_9)","line":81,"loc":{"start":{"line":81,"column":11},"end":{"line":81,"column":14}}},"10":{"name":"(anonymous_10)","line":93,"loc":{"start":{"line":93,"column":11},"end":{"line":93,"column":14}}},"11":{"name":"(anonymous_11)","line":101,"loc":{"start":{"line":101,"column":13},"end":{"line":101,"column":16}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":39}},"4":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"5":{"start":{"line":20,"column":6},"end":{"line":20,"column":22}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":32}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":27}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":20}},"9":{"start":{"line":35,"column":4},"end":{"line":35,"column":53}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":36}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":53}},"12":{"start":{"line":48,"column":4},"end":{"line":48,"column":30}},"13":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"14":{"start":{"line":56,"column":6},"end":{"line":56,"column":22}},"15":{"start":{"line":59,"column":4},"end":{"line":59,"column":32}},"16":{"start":{"line":60,"column":4},"end":{"line":60,"column":27}},"17":{"start":{"line":62,"column":4},"end":{"line":62,"column":20}},"18":{"start":{"line":66,"column":4},"end":{"line":66,"column":40}},"19":{"start":{"line":70,"column":4},"end":{"line":70,"column":40}},"20":{"start":{"line":74,"column":4},"end":{"line":74,"column":46}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"22":{"start":{"line":83,"column":6},"end":{"line":83,"column":22}},"23":{"start":{"line":85,"column":4},"end":{"line":85,"column":32}},"24":{"start":{"line":86,"column":4},"end":{"line":86,"column":20}},"25":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"26":{"start":{"line":95,"column":6},"end":{"line":95,"column":22}},"27":{"start":{"line":97,"column":4},"end":{"line":97,"column":32}},"28":{"start":{"line":98,"column":4},"end":{"line":98,"column":20}},"29":{"start":{"line":102,"column":4},"end":{"line":102,"column":28}},"30":{"start":{"line":106,"column":0},"end":{"line":106,"column":22}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"3":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"4":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]}},"code":["'use strict'","","const DoublyLinkedList = require('./DoublyLinkedList')","const DequeIterator = require('./DequeIterator')","/**"," * DoublyLinkedList backed double ended queue"," * implements just enough to keep the Pool"," */","class Deque {","  constructor () {","    this._list = new DoublyLinkedList()","  }","","  /**","   * removes and returns the first element from the queue","   * @return {[type]} [description]","   */","  shift () {","    if (this._length === 0) {","      return undefined","    }","","    const node = this._list.head","    this._list.remove(node)","","    return node.data","  }","","  /**","   * adds one elemts to the beginning of the queue","   * @param  {[type]} element [description]","   * @return {[type]}         [description]","   */","  unshift (element) {","    const node = DoublyLinkedList.createNode(element)","","    this._list.insertBeginning(node)","  }","","  /**","   * adds one to the end of the queue","   * @param  {[type]} element [description]","   * @return {[type]}         [description]","   */","  push (element) {","    const node = DoublyLinkedList.createNode(element)","","    this._list.insertEnd(node)","  }","","  /**","   * removes and returns the last element from the queue","   */","  pop () {","    if (this._length === 0) {","      return undefined","    }","","    const node = this._list.tail","    this._list.remove(node)","","    return node.data","  }","","  [Symbol.iterator] () {","    return new DequeIterator(this._list)","  }","","  iterator () {","    return new DequeIterator(this._list)","  }","","  reverseIterator () {","    return new DequeIterator(this._list, true)","  }","","  /**","   * get a reference to the item at the head of the queue","   * @return {element} [description]","   */","  get head () {","    if (this._list.length === 0) {","      return undefined","    }","    const node = this._list.head","    return node.data","  }","","  /**","   * get a reference to the item at the tail of the queue","   * @return {element} [description]","   */","  get tail () {","    if (this._list.length === 0) {","      return undefined","    }","    const node = this._list.tail","    return node.data","  }","","  get length () {","    return this._list.length","  }","}","","module.exports = Deque",""],"l":{"3":1,"4":1,"11":0,"19":0,"20":0,"23":0,"24":0,"26":0,"35":0,"37":0,"46":0,"48":0,"55":0,"56":0,"59":0,"60":0,"62":0,"66":0,"70":0,"74":0,"82":0,"83":0,"85":0,"86":0,"94":0,"95":0,"97":0,"98":0,"102":0,"106":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/DoublyLinkedList.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/DoublyLinkedList.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":17}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":25}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":19}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":14},"end":{"line":44,"column":30}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":15},"end":{"line":56,"column":31}}},"6":{"name":"(anonymous_6)","line":68,"loc":{"start":{"line":68,"column":9},"end":{"line":68,"column":16}}},"7":{"name":"(anonymous_7)","line":85,"loc":{"start":{"line":85,"column":20},"end":{"line":85,"column":27}}}},"statementMap":{"1":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"2":{"start":{"line":20,"column":4},"end":{"line":20,"column":20}},"3":{"start":{"line":21,"column":4},"end":{"line":21,"column":19}},"4":{"start":{"line":25,"column":4},"end":{"line":33,"column":5}},"5":{"start":{"line":26,"column":6},"end":{"line":26,"column":22}},"6":{"start":{"line":27,"column":6},"end":{"line":27,"column":22}},"7":{"start":{"line":28,"column":6},"end":{"line":28,"column":22}},"8":{"start":{"line":29,"column":6},"end":{"line":29,"column":22}},"9":{"start":{"line":30,"column":6},"end":{"line":30,"column":19}},"10":{"start":{"line":32,"column":6},"end":{"line":32,"column":40}},"11":{"start":{"line":37,"column":4},"end":{"line":41,"column":5}},"12":{"start":{"line":38,"column":6},"end":{"line":38,"column":32}},"13":{"start":{"line":40,"column":6},"end":{"line":40,"column":39}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":23}},"15":{"start":{"line":46,"column":4},"end":{"line":46,"column":28}},"16":{"start":{"line":47,"column":4},"end":{"line":51,"column":5}},"17":{"start":{"line":48,"column":6},"end":{"line":48,"column":25}},"18":{"start":{"line":50,"column":6},"end":{"line":50,"column":30}},"19":{"start":{"line":52,"column":4},"end":{"line":52,"column":23}},"20":{"start":{"line":53,"column":4},"end":{"line":53,"column":17}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":28}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":23}},"23":{"start":{"line":59,"column":4},"end":{"line":63,"column":5}},"24":{"start":{"line":60,"column":6},"end":{"line":60,"column":25}},"25":{"start":{"line":62,"column":6},"end":{"line":62,"column":30}},"26":{"start":{"line":64,"column":4},"end":{"line":64,"column":23}},"27":{"start":{"line":65,"column":4},"end":{"line":65,"column":17}},"28":{"start":{"line":69,"column":4},"end":{"line":73,"column":5}},"29":{"start":{"line":70,"column":6},"end":{"line":70,"column":27}},"30":{"start":{"line":72,"column":6},"end":{"line":72,"column":32}},"31":{"start":{"line":74,"column":4},"end":{"line":78,"column":5}},"32":{"start":{"line":75,"column":6},"end":{"line":75,"column":27}},"33":{"start":{"line":77,"column":6},"end":{"line":77,"column":32}},"34":{"start":{"line":79,"column":4},"end":{"line":79,"column":20}},"35":{"start":{"line":80,"column":4},"end":{"line":80,"column":20}},"36":{"start":{"line":81,"column":4},"end":{"line":81,"column":17}},"37":{"start":{"line":86,"column":4},"end":{"line":90,"column":5}},"38":{"start":{"line":94,"column":0},"end":{"line":94,"column":33}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"6":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]}},"code":["'use strict'","","/**"," * A Doubly Linked List, because there aren't enough in the world..."," * this is pretty much a direct JS port of the one wikipedia"," * https://en.wikipedia.org/wiki/Doubly_linked_list"," *"," * For most usage 'insertBeginning' and 'insertEnd' should be enough"," *"," * nodes are expected to something like a POJSO like"," * {"," *   prev: null,"," *   next: null,"," *   something: 'whatever you like'"," * }"," */","class DoublyLinkedList {","  constructor () {","    this.head = null","    this.tail = null","    this.length = 0","  }","","  insertBeginning (node) {","    if (this.head === null) {","      this.head = node","      this.tail = node","      node.prev = null","      node.next = null","      this.length++","    } else {","      this.insertBefore(this.head, node)","    }","  }","","  insertEnd (node) {","    if (this.tail === null) {","      this.insertBeginning(node)","    } else {","      this.insertAfter(this.tail, node)","    }","  }","","  insertAfter (node, newNode) {","    newNode.prev = node","    newNode.next = node.next","    if (node.next === null) {","      this.tail = newNode","    } else {","      node.next.prev = newNode","    }","    node.next = newNode","    this.length++","  }","","  insertBefore (node, newNode) {","    newNode.prev = node.prev","    newNode.next = node","    if (node.prev === null) {","      this.head = newNode","    } else {","      node.prev.next = newNode","    }","    node.prev = newNode","    this.length++","  }","","  remove (node) {","    if (node.prev === null) {","      this.head = node.next","    } else {","      node.prev.next = node.next","    }","    if (node.next === null) {","      this.tail = node.prev","    } else {","      node.next.prev = node.prev","    }","    node.prev = null","    node.next = null","    this.length--","  }","","  // FIXME: this should not live here and has become a dumping ground...","  static createNode (data) {","    return {","      prev: null,","      next: null,","      data: data","    }","  }","}","","module.exports = DoublyLinkedList",""],"l":{"19":0,"20":0,"21":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"37":0,"38":0,"40":0,"45":0,"46":0,"47":0,"48":0,"50":0,"52":0,"53":0,"57":0,"58":0,"59":0,"60":0,"62":0,"64":0,"65":0,"69":0,"70":0,"72":0,"74":0,"75":0,"77":0,"79":0,"80":0,"81":0,"86":0,"94":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/DequeIterator.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/DequeIterator.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":7},"end":{"line":8,"column":10}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":70}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":31}},"3":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"4":{"start":{"line":13,"column":6},"end":{"line":13,"column":38}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":17}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":30}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]}},"code":["'use strict'","","const DoublyLinkedListIterator = require('./DoublyLinkedListIterator')","/**"," * Thin wrapper around an underlying DDL iterator"," */","class DequeIterator extends DoublyLinkedListIterator {","  next () {","    const result = super.next()","","    // unwrap the node...","    if (result.value) {","      result.value = result.value.data","    }","","    return result","  }","}","","module.exports = DequeIterator",""],"l":{"3":1,"9":0,"12":0,"13":0,"16":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/DoublyLinkedListIterator.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/DoublyLinkedListIterator.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":14},"end":{"line":22,"column":42}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":9},"end":{"line":32,"column":12}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":17},"end":{"line":37,"column":20}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":8},"end":{"line":46,"column":11}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":9},"end":{"line":52,"column":12}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":7},"end":{"line":59,"column":10}}},"7":{"name":"(anonymous_7)","line":88,"loc":{"start":{"line":88,"column":20},"end":{"line":88,"column":23}}}},"statementMap":{"1":{"start":{"line":23,"column":4},"end":{"line":23,"column":33}},"2":{"start":{"line":25,"column":4},"end":{"line":25,"column":56}},"3":{"start":{"line":26,"column":4},"end":{"line":26,"column":60}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":25}},"5":{"start":{"line":28,"column":4},"end":{"line":28,"column":23}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":22}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":50}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":24}},"9":{"start":{"line":38,"column":4},"end":{"line":42,"column":5}},"10":{"start":{"line":39,"column":6},"end":{"line":39,"column":26}},"11":{"start":{"line":40,"column":6},"end":{"line":40,"column":52}},"12":{"start":{"line":41,"column":6},"end":{"line":41,"column":12}},"13":{"start":{"line":43,"column":4},"end":{"line":43,"column":48}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":22}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":25}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":23}},"17":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"18":{"start":{"line":54,"column":6},"end":{"line":54,"column":18}},"19":{"start":{"line":56,"column":4},"end":{"line":56,"column":35}},"20":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"21":{"start":{"line":61,"column":6},"end":{"line":61,"column":27}},"22":{"start":{"line":64,"column":4},"end":{"line":64,"column":25}},"23":{"start":{"line":68,"column":4},"end":{"line":71,"column":5}},"24":{"start":{"line":69,"column":6},"end":{"line":69,"column":23}},"25":{"start":{"line":70,"column":6},"end":{"line":70,"column":27}},"26":{"start":{"line":73,"column":4},"end":{"line":76,"column":5}},"27":{"start":{"line":89,"column":4},"end":{"line":89,"column":139}},"28":{"start":{"line":93,"column":0},"end":{"line":93,"column":41}}},"branchMap":{"1":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":41},"end":{"line":25,"column":47}},{"start":{"line":25,"column":50},"end":{"line":25,"column":56}}]},"2":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":45},"end":{"line":26,"column":51}},{"start":{"line":26,"column":54},"end":{"line":26,"column":60}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"5":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":31}},{"start":{"line":53,"column":35},"end":{"line":53,"column":54}},{"start":{"line":53,"column":58},"end":{"line":53,"column":82}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"8":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":29}},{"start":{"line":68,"column":33},"end":{"line":68,"column":57}}]},"9":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":11},"end":{"line":89,"column":37}},{"start":{"line":89,"column":41},"end":{"line":89,"column":67}},{"start":{"line":89,"column":71},"end":{"line":89,"column":103}},{"start":{"line":89,"column":107},"end":{"line":89,"column":139}}]}},"code":["'use strict'","","/**"," * Creates an interator for a DoublyLinkedList starting at the given node"," * It's internal cursor will remains relative to the last \"iterated\" node as that"," * node moves through the list until it either iterates to the end of the list,"," * or the the node it's tracking is removed from the list. Until the first 'next'"," * call it tracks the head/tail of the linked list. This means that one can create"," * an iterator on an empty list, then add nodes, and then the iterator will follow"," * those nodes. Because the DoublyLinkedList nodes don't track their owning \"list\" and"," * it's highly inefficient to walk the list for every iteration, the iterator won't know"," * if the node has been detached from one List and added to another list, or if the iterator"," *"," * The created object is an es6 compatible iterator"," */","class DoublyLinkedListIterator {","","  /**","   * @param  {Object} doublyLinkedListNode a node that is part of a doublyLinkedList","   * @param  {Boolean} reverse             is this a reverse iterator? default: false","   */","  constructor (doublyLinkedList, reverse) {","    this._list = doublyLinkedList","    // NOTE: these key names are tied to the DoublyLinkedListIterator","    this._direction = reverse === true ? 'prev' : 'next'","    this._startPosition = reverse === true ? 'tail' : 'head'","    this._started = false","    this._cursor = null","    this._done = false","  }","","  _start () {","    this._cursor = this._list[this._startPosition]","    this._started = true","  }","","  _advanceCursor () {","    if (this._started === false) {","      this._started = true","      this._cursor = this._list[this._startPosition]","      return","    }","    this._cursor = this._cursor[this._direction]","  }","","  reset () {","    this._done = false","    this._started = false","    this._cursor = null","  }","","  remove () {","    if (this._started === false || this._done === true || this._isCursorDetached()) {","      return false","    }","    this._list.remove(this._cursor)","  }","","  next () {","    if (this._done === true) {","      return { done: true }","    }","","    this._advanceCursor()","","    // if there is no node at the cursor or the node at the cursor is no longer part of","    // a doubly linked list then we are done/finished/kaput","    if (this._cursor === null || this._isCursorDetached()) {","      this._done = true","      return { done: true }","    }","","    return {","      value: this._cursor,","      done: false","    }","  }","","  /**","   * Is the node detached from a list?","   * NOTE: you can trick/bypass/confuse this check by removing a node from one DoublyLinkedList","   * and adding it to another.","   * TODO: We can make this smarter by checking the direction of travel and only checking","   * the required next/prev/head/tail rather than all of them","   * @param  {[type]}  node [description]","   * @return {Boolean}      [description]","   */","  _isCursorDetached () {","    return this._cursor.prev === null && this._cursor.next === null && this._list.tail !== this._cursor && this._list.head !== this._cursor","  }","}","","module.exports = DoublyLinkedListIterator",""],"l":{"23":0,"25":0,"26":0,"27":0,"28":0,"29":0,"33":0,"34":0,"38":0,"39":0,"40":0,"41":0,"43":0,"47":0,"48":0,"49":0,"53":0,"54":0,"56":0,"60":0,"61":0,"64":0,"68":0,"69":0,"70":0,"73":0,"89":0,"93":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/PriorityQueue.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/PriorityQueue.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":21}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":13},"end":{"line":19,"column":16}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":10},"end":{"line":27,"column":26}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":10},"end":{"line":40,"column":13}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":11},"end":{"line":49,"column":14}}},"6":{"name":"(anonymous_6)","line":58,"loc":{"start":{"line":58,"column":11},"end":{"line":58,"column":14}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":39}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":20}},"4":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"5":{"start":{"line":15,"column":6},"end":{"line":15,"column":35}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":19}},"7":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"8":{"start":{"line":22,"column":6},"end":{"line":22,"column":38}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":45}},"11":{"start":{"line":31,"column":4},"end":{"line":36,"column":5}},"12":{"start":{"line":32,"column":6},"end":{"line":35,"column":7}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":35}},"14":{"start":{"line":37,"column":4},"end":{"line":37,"column":35}},"15":{"start":{"line":41,"column":4},"end":{"line":45,"column":5}},"16":{"start":{"line":42,"column":6},"end":{"line":44,"column":7}},"17":{"start":{"line":43,"column":8},"end":{"line":43,"column":37}},"18":{"start":{"line":46,"column":4},"end":{"line":46,"column":10}},"19":{"start":{"line":50,"column":4},"end":{"line":54,"column":5}},"20":{"start":{"line":51,"column":6},"end":{"line":53,"column":7}},"21":{"start":{"line":52,"column":8},"end":{"line":52,"column":34}},"22":{"start":{"line":55,"column":4},"end":{"line":55,"column":10}},"23":{"start":{"line":59,"column":4},"end":{"line":63,"column":5}},"24":{"start":{"line":60,"column":6},"end":{"line":62,"column":7}},"25":{"start":{"line":61,"column":8},"end":{"line":61,"column":34}},"26":{"start":{"line":64,"column":4},"end":{"line":64,"column":10}},"27":{"start":{"line":68,"column":0},"end":{"line":68,"column":30}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":15},"end":{"line":29,"column":23}},{"start":{"line":29,"column":27},"end":{"line":29,"column":40}},{"start":{"line":29,"column":44},"end":{"line":29,"column":45}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"4":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":10},"end":{"line":32,"column":22}},{"start":{"line":32,"column":26},"end":{"line":32,"column":48}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"6":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":6}},{"start":{"line":51,"column":6},"end":{"line":51,"column":6}}]},"7":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]}},"code":["'use strict'","","const Queue = require('./Queue')","","/**"," * @class"," * @private"," */","class PriorityQueue {","  constructor (size) {","    this._size = Math.max(+size | 0, 1)","    this._slots = []","    // initialize arrays to hold queue elements","    for (let i = 0; i < this._size; i++) {","      this._slots.push(new Queue())","    }","  }","","  get length () {","    let _length = 0","    for (let i = 0, slots = this._slots.length; i < slots; i++) {","      _length += this._slots[i].length","    }","    return _length","  }","","  enqueue (obj, priority) {","    // Convert to integer with a default value of 0.","    priority = priority && +priority | 0 || 0","","    if (priority) {","      if (priority < 0 || priority >= this._size) {","        priority = (this._size - 1)","        // put obj at the end of the line","      }","    }","    this._slots[priority].push(obj)","  }","","  dequeue () {","    for (let i = 0, sl = this._slots.length; i < sl; i += 1) {","      if (this._slots[i].length) {","        return this._slots[i].shift()","      }","    }","    return","  }","","  get head () {","    for (let i = 0, sl = this._slots.length; i < sl; i += 1) {","      if (this._slots[i].length > 0) {","        return this._slots[i].head","      }","    }","    return","  }","","  get tail () {","    for (let i = this._slots.length - 1; i >= 0; i--) {","      if (this._slots[i].length > 0) {","        return this._slots[i].tail","      }","    }","    return","  }","}","","module.exports = PriorityQueue",""],"l":{"3":1,"11":0,"12":0,"14":0,"15":0,"20":0,"21":0,"22":0,"24":0,"29":0,"31":0,"32":0,"33":0,"37":0,"41":0,"42":0,"43":0,"46":0,"50":0,"51":0,"52":0,"55":0,"59":0,"60":0,"61":0,"64":0,"68":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/Queue.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/Queue.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":7},"end":{"line":20,"column":25}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":33},"end":{"line":26,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":21,"column":4},"end":{"line":21,"column":61}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":76}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":30}},"6":{"start":{"line":27,"column":4},"end":{"line":31,"column":5}},"7":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"8":{"start":{"line":29,"column":8},"end":{"line":29,"column":31}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":22}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":6}},{"start":{"line":28,"column":6},"end":{"line":28,"column":6}}]}},"code":["'use strict'","","const DoublyLinkedList = require('./DoublyLinkedList')","const Deque = require('./Deque')","","/**"," * Sort of a internal queue for holding the waiting"," * resource requets for a given \"priority\"."," * Also handles managing timeouts rejections on items (is this the best place for this?)"," * This is the last point where we know which queue a resourceRequest is in"," *"," */","class Queue extends Deque {","  /**","   * Adds the obj to the end of the list for this slot","   * we completely override the parent method because we need access to the","   * node for our rejection handler","   * @param {[type]} item [description]","   */","  push (resourceRequest) {","    const node = DoublyLinkedList.createNode(resourceRequest)","    resourceRequest.promise.catch(this._createTimeoutRejectionHandler(node))","    this._list.insertEnd(node)","  }","","  _createTimeoutRejectionHandler (node) {","    return (reason) => {","      if (reason.name === 'TimeoutError') {","        this._list.remove(node)","      }","    }","  }","}","","module.exports = Queue",""],"l":{"3":1,"4":1,"21":0,"22":0,"23":0,"27":0,"28":0,"29":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/DefaultEvictor.js":{"path":"/home/travis/build/npmtest/node-npmtest-generic-pool/generic-pool/lib/DefaultEvictor.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":8},"end":{"line":4,"column":56}}}},"statementMap":{"1":{"start":{"line":5,"column":4},"end":{"line":5,"column":61}},"2":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"3":{"start":{"line":8,"column":6},"end":{"line":8,"column":17}},"4":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"5":{"start":{"line":12,"column":6},"end":{"line":12,"column":17}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":16}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":8},"end":{"line":7,"column":47}},{"start":{"line":7,"column":51},"end":{"line":7,"column":85}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]}},"code":["'use strict'","","class DefaultEvictor {","  evict (config, pooledResource, availableObjectsCount) {","    const idleTime = Date.now() - pooledResource.lastIdleTime","","    if (config.softIdleTimeoutMillis < idleTime && config.min < availableObjectsCount) {","      return true","    }","","    if (config.idleTimeoutMillis < idleTime) {","      return true","    }","","    return false","  }","}","","module.exports = DefaultEvictor",""],"l":{"5":0,"7":0,"8":0,"11":0,"12":0,"15":0,"19":1}}}